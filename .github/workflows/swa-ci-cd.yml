name: Sugar Wallet App CI/CD

on:
  push:
    branches: ["staging", "staging-tr", "staging-au", "main", "main-tr", "main-au"]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    - name: Run Lint Fix
      run: npm run lint:fix
    - name: Manage Global Environment
      if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'
      run: |
        echo -ne "\nNEXT_PUBLIC_IS_GLOBAL=true" >> .env
    - name: Set country code for Production
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main-tr" ]; then
          echo -ne "\nNEXT_PUBLIC_COUNTRY_CODE=TR" >> .env.production
          echo -ne "\nCOUNTRY_CODE=TR" >> .env.production
        elif [ "${{ github.ref }}" == "refs/heads/main-au" ]; then
          echo -ne "\nNEXT_PUBLIC_COUNTRY_CODE=NZ" >> .env.production
          echo -ne "\nCOUNTRY_CODE=NZ" >> .env.production
        elif [ "${{ github.ref }}" == "refs/heads/staging-tr" ]; then
          echo -ne "\nNEXT_PUBLIC_COUNTRY_CODE=TR" >> .env.staging
          echo -ne "\nCOUNTRY_CODE=TR" >> .env.staging
        elif [ "${{ github.ref }}" == "refs/heads/staging-au" ]; then
          echo -ne "\nNEXT_PUBLIC_COUNTRY_CODE=NZ" >> .env.staging
          echo -ne "\nCOUNTRY_CODE=NZ" >> .env.staging
        fi
    - name: Build For Staging
      if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/staging-tr' || github.ref == 'refs/heads/staging-au'
      run: cp .env.staging .env.production && npm run build
    - name: Build For Production
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-tr' || github.ref == 'refs/heads/main-au'
      run: npm run build
    - name: Archive mandatory files
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: |
          .next/**
          next.config.js
          public
          package.json
          package-lock.json
        include-hidden-files: true
    
  deploy:
    runs-on: ubuntu-22.04
    needs: build
    steps:
    - name: Download archive
      uses: actions/download-artifact@v4
      with:
        name: build
        path: .
    - name: Set Variables
      id: set_vars
      run: |
        if [ "${{ github.ref }}" == "refs/heads/staging" ]; then
          echo "host=STAGING_GLOBAL" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "host=PRODUCTION_GLOBAL" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" == "refs/heads/staging-tr" ]; then
          echo "host=STAGING_TURKEY" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" == "refs/heads/main-tr" ]; then
          echo "host=PRODUCTION_TURKEY" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" == "refs/heads/staging-au" ]; then
          echo "host=STAGING_AUSTRALIA" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" == "refs/heads/main-au" ]; then
          echo "host=PRODUCTION_AUSTRALIA" >> $GITHUB_OUTPUT
        fi
    - name: Copy Files to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets[format('{0}_HOST', steps.set_vars.outputs.host)] }}
        username: ${{ secrets[format('{0}_USER', steps.set_vars.outputs.host)] }}
        key: ${{ secrets[format('{0}_PRIVATE_KEY', steps.set_vars.outputs.host)] }}
        port: 22
        source: "."
        target: "/home/ubuntu/sw-web-app"
    - name: Install Dependencies and Restart Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets[format('{0}_HOST', steps.set_vars.outputs.host)] }}
        username: ${{ secrets[format('{0}_USER', steps.set_vars.outputs.host)] }}
        key: ${{ secrets[format('{0}_PRIVATE_KEY', steps.set_vars.outputs.host)] }}
        port: 22
        script: |
          cd /home/ubuntu/sw-web-app
          npm install --legacy-peer-deps --omit=dev
          pm2 restart sw-web-app
